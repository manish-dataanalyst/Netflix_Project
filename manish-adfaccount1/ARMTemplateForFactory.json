{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "manish-adfaccount1"
		},
		"ls_adls_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls'"
		},
		"ls_adls_connect_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_connect'"
		},
		"ls_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricks'"
		},
		"ls_demo_sink_connection_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_demo_sink_connection'"
		},
		"ls_lookupwatertb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_lookupwatertb'"
		},
		"ls_netflix_adls_con_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_netflix_adls_con'"
		},
		"ls_sqldb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sqldb'"
		},
		"ls_adls_con_df_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_adls_con_df'"
		},
		"ls_blob_con_df_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_con_df'"
		},
		"ls_adls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://manishadlsgen2.dfs.core.windows.net/"
		},
		"ls_adls_connect_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://manishadlsgen2.dfs.core.windows.net/"
		},
		"ls_databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0305-054042-q0u4pt2u"
		},
		"ls_demo_sink_connection_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://manishadlsgen2.dfs.core.windows.net/"
		},
		"ls_lookupwatertb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "manish-sqlserver.database.windows.net"
		},
		"ls_lookupwatertb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "manishsqldb"
		},
		"ls_lookupwatertb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ls_netflix_adls_con_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://manishadlsgen2.dfs.core.windows.net/"
		},
		"ls_netflix_git_con_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raw.githubusercontent.com/"
		},
		"ls_sqldb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "manish-sqlserver.database.windows.net"
		},
		"ls_sqldb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "manishsqldb"
		},
		"ls_sqldb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ls_adls_con_df_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://manishadls2storage.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy_netflix_data_from_git')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachfile",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Validatefiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.p_array",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy_netflix_from_git",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_netflix_gitdata",
											"type": "DatasetReference",
											"parameters": {
												"file_name": {
													"value": "@item().file_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_netflix_sink_adls",
											"type": "DatasetReference",
											"parameters": {
												"folder_name": {
													"value": "@item().folder_name",
													"type": "Expression"
												},
												"file_name": {
													"value": "@item().file_name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Validatefiles",
						"type": "Validation",
						"dependsOn": [
							{
								"activity": "Setvariable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_validate",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.12:00:00",
							"sleep": 10
						}
					},
					{
						"name": "Webactivity",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "GET",
							"headers": {},
							"url": "https://raw.githubusercontent.com/manish-dataanalyst/Netflix_Project/refs/heads/main/netflix_cast.csv"
						}
					},
					{
						"name": "Setvariable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Webactivity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "getmetadata",
							"value": {
								"value": "@activity('Webactivity').output.response",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"p_array": {
						"type": "array",
						"defaultValue": [
							{
								"folder_name": "netflix_cast",
								"file_name": "netflix_cast.csv"
							},
							{
								"folder_name": "netflix_category",
								"file_name": "netflix_category.csv"
							},
							{
								"folder_name": "netflix_countries",
								"file_name": "netflix_countries.csv"
							},
							{
								"folder_name": "netflix_directors",
								"file_name": "netflix_directors.csv"
							}
						]
					}
				},
				"variables": {
					"getmetadata": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_validate')]",
				"[concat(variables('factoryId'), '/datasets/ds_netflix_gitdata')]",
				"[concat(variables('factoryId'), '/datasets/ds_netflix_sink_adls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_netflix_gitdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_netflix_git_con",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "manish-dataanalyst/Netflix_Project/refs/heads/main/@{dataset().file_name}",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_netflix_git_con')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_netflix_sink_adls')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_netflix_adls_con",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().folder_name",
							"type": "Expression"
						},
						"fileSystem": "bronze"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_netflix_adls_con')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_validate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_netflix_adls_con",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "netflix_cast.csv",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_netflix_adls_con')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_connect')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_connect_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_connect_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-388741764784113.13.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_demo_sink_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_demo_sink_connection_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_demo_sink_connection_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_lookupwatertb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_lookupwatertb_properties_typeProperties_server')]",
					"database": "[parameters('ls_lookupwatertb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_lookupwatertb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_lookupwatertb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_netflix_adls_con')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_netflix_adls_con_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_netflix_adls_con_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_netflix_git_con')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_netflix_git_con_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sqldb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sqldb_properties_typeProperties_server')]",
					"database": "[parameters('ls_sqldb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sqldb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sqldb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "AutoResolve",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_adls_con_df')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_adls_con_df_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_adls_con_df_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_con_df')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_con_df_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_input_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_con_df",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "movies.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_con_df')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_output_blob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_con_df",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_con_df')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviescleanflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_input_blob",
								"type": "DatasetReference"
							},
							"name": "movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_output_blob",
								"type": "DatasetReference"
							},
							"name": "output2",
							"rejectedDataLinkedService": {
								"referenceName": "ls_blob_con_df",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "ds_output_blob",
								"type": "DatasetReference"
							},
							"name": "output1",
							"rejectedDataLinkedService": {
								"referenceName": "ls_blob_con_df",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "ds_output_blob",
								"type": "DatasetReference"
							},
							"name": "output3",
							"rejectedDataLinkedService": {
								"referenceName": "ls_blob_con_df",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "columnextraction"
						},
						{
							"name": "moviesbyyear1"
						},
						{
							"name": "sortbyyear"
						},
						{
							"name": "surrogateKey1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movieId as string,",
						"          title as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> movies",
						"movies derive(Year = toInteger(trim(right(title, 6),'()')),",
						"          title = trim(substring(title, 0, length(title)-6),' ')) ~> columnextraction",
						"columnextraction aggregate(groupBy(Year),",
						"     moviescount = count(),",
						"     partitionBy('hash', 1)) ~> moviesbyyear1",
						"moviesbyyear1 sort(asc(Year, true),",
						"     partitionBy('hash', 1)) ~> sortbyyear",
						"columnextraction keyGenerate(output(key as long),",
						"     startAt: 1L,",
						"     stepValue: 1L,",
						"     partitionBy('hash', 1)) ~> surrogateKey1",
						"sortbyyear sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['movies_by_year.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> output2",
						"columnextraction sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['movies_cleaned.csv'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> output1",
						"surrogateKey1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['surrogatekeyfile'],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> output3"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_input_blob')]",
				"[concat(variables('factoryId'), '/datasets/ds_output_blob')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_con_df')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_pip')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "moviescleanflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"movies": {},
									"output2": {},
									"output1": {},
									"output3": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/moviescleanflow')]"
			]
		}
	]
}